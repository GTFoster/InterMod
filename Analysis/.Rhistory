Bbifarius_partners <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% select(., taxonomy.name.to) %>% table()
Bbifarius_partners
Bbifarius_partners <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% select(., taxonomy.name.to, network_id) %>% unique() %>% select(., taxonomy.name.to) %>% table()
Bbifarius_partners
sort(Bbifarius_partners, decreasing=TRUE)
library(ENMTML)
?ENMTML(
pred_dir,
proj_dir = NULL,
result_dir = NULL,
occ_file,
sp,
x,
y,
min_occ = 10,
thin_occ = NULL,
eval_occ = NULL,
colin_var = NULL,
imp_var = FALSE,
sp_accessible_area = NULL,
pseudoabs_method,
pres_abs_ratio = 1,
part,
save_part = FALSE,
save_final = TRUE,
algorithm,
thr,
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 1
)
ENMTML()
ENMTML
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius"
B_dat
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius")
B_dat
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% dplyr::select(., taxonomy.name.from, network_id, x, y)
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% dplyr::select(., taxonomy.name.from, network_id, x, y) %>% unique()
View(B_dat)
mGDat
View(B_dat)
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Apis mellifera") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
View(B_dat)
st_coordinates
st_coordinates(geoms[[i]]$netID$geom)[2]
i <- 2
st_coordinates(geoms[[i]]$netID$geom)[2]
st_coordinates(geoms[[i]]$netID$geom)
geoms[[1]]$netID$network_id
geoms[[1]]$netID$geom
st_coordinates(geoms[[1]]$netID$geom)
coords <- NULL
for(i in 1:length(geoms)){
df_temp <- data.frame(network_id=geoms[[i]]$netID$network_id,x=colMeans(st_coordinates(geoms[[i]]$netID$geom))[1], y=colMeans(st_coordinates(geoms[[i]]$netID$geom))[2]) #Extract the average point. If it's a polygon, average all the edge points. Will replace this with a formal centroid finding approach later
coords <- rbind(coords, df_temp)
}
coords <- dplyr::filter(coords, is.na(x)==FALSE)
coords
mGDat <- left_join(mgIntTaxaFil, coords, by="network_id")
mGDat <- dplyr::filter(mGDat, is.na(x)==FALSE)
dplyr::select(mGDat, network_id, x) %>% unique() %>% table() %>% table() #Checking that there are no locations that are the same across network ids.
head(sort(table(mGDat$taxonomy.name.from), decreasing = TRUE))
head(sort(table(mGDat$taxonomy.name.to), decreasing = TRUE))
mGDat %>% dplyr::select(., taxonomy.name.from, network_id) %>% unique() %>% select(taxonomy.name.from) %>% table() %>% sort(., decreasing=TRUE) %>% head()
mGDat %>% dplyr::select(., taxonomy.name.to, network_id) %>% unique() %>% select(taxonomy.name.to) %>% table() %>% sort(., decreasing=TRUE) %>% head()
Bbifarius_partners <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% select(., taxonomy.name.to, network_id) %>% unique() %>% select(., taxonomy.name.to) %>% table()
sort(Bbifarius_partners, decreasing=TRUE)
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Apis mellifera") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
B_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
B_dat
mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus bifarius") %>% select(., taxonomy.name.to, network_id)
mGDat %>% dplyr::select(., taxonomy.name.to, network_id) %>% unique() %>% select(taxonomy.name.to) %>% table() %>% sort(., decreasing=TRUE) %>% head()
mGDat %>% dplyr::select(., taxonomy.name.to, network_id) %>% unique() %>% select(taxonomy.name.to) %>% table() %>% sort(., decreasing=TRUE) %>% head()
mGDat %>% dplyr::select(., taxonomy.name.from, network_id) %>% unique() %>% select(taxonomy.name.from) %>% table() %>% sort(., decreasing=TRUE) %>% head()
mGDat %>% dplyr::select(., taxonomy.name.from, x,y) %>% unique() %>% select(taxonomy.name.from) %>% table() %>% sort(., decreasing=TRUE) %>% head()
mGDat %>% dplyr::select(., taxonomy.name.from, x,y) %>% unique() %>% select(taxonomy.name.from) %>% table() %>% sort(., decreasing=TRUE) %>% head()
mGDat %>% dplyr::select(., taxonomy.name.to, x,y) %>% unique() %>% select(taxonomy.name.to) %>% table() %>% sort(., decreasing=TRUE) %>% head()
Bbifarius_partners <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus terrestris") %>% select(., taxonomy.name.to, network_id) %>% unique() %>% select(., taxonomy.name.to) %>% table()
sort(Bbifarius_partners, decreasing=TRUE)
mGDat %>% dplyr::select(., taxonomy.name.from, x,y) %>% unique() %>% select(taxonomy.name.from) %>% table() %>% sort(., decreasing=TRUE) %>% head()
mGDat %>% dplyr::select(., taxonomy.name.to, network_id) %>% unique() %>% select(taxonomy.name.to) %>% table() %>% sort(., decreasing=TRUE) %>% head()
Bterrestris_partners <- mGDat %>% dplyr::filter(taxonomy.name.from=="Bombus terrestris") %>% select(., taxonomy.name.to, network_id) %>% unique() %>% select(., taxonomy.name.to) %>% table()
sort(Bterrestris_partners, decreasing=TRUE)
Bterrestris_partners <- mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila") %>% select(., taxonomy.name.to, network_id) %>% unique() %>% select(., taxonomy.name.to) %>% table()
sort(Bterrestris_partners, decreasing=TRUE)
parts <- mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila") %>% select(., taxonomy.name.to, network_id) %>% unique() %>% select(., taxonomy.name.to) %>% table()
parts
partners <- mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila") %>% select(., taxonomy.name.to, network_id) %>% unique() %>% select(., taxonomy.name.to) %>% table()
sort(partners, decreasing=TRUE)
M_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
M_dat
M_dat
D_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Daucus carota carota") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
D_dat
D_dat <- mGDat %>% dplyr::filter(taxonomy.name.to=="Daucus carota carota") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
D_dat
save(D_dat, file="data./occ_Dat/Dcarota.txt")
write.table(D_dat, file="data./occ_Dat/Dcarota.txt")
write.table(D_dat, file="data./occ_Dat/Dcarota.txt")
write.table(D_dat, file="data/occ_Dat/Dcarota.txt")
x <- read.table(file="data/occ_Dat/Dcarota.txt")
View(x)
x <- read.table(file="data/occ_Dat/Dcarota.txt")
colnames(D_dat) <- c("species", "x", "y")
write.table(D_dat, file="data/occ_Dat/Dcarota.txt")
x <- read.table(file="data/occ_Dat/Dcarota.txt")
View(x)
colnames(M_dat) <- c("species", "x", "y")
write.table(M_dat, file="data/occ_Dat/Mpumila.txt")
Int_dat <- mGDat %>% dplyr::filter(taxonomy.name.to=="Daucus carota carota") %>%
dplyr::filter(., taxonomy.name.from=="Mordellistena pumila") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
colnames(Int_dat) <- c("species", "x", "y")
Int_dat
Int_dat$species <- "Interaction"
write.table(Int_dat, file="data/occ_Dat/Int_Dcarota.Mpumila.txt")
?worldclim_global()
library(terra)
bioclim_data <- worldclim_global(var = "bio",
res = 2.5,
path = "data/")
library(geodata)
?worldclim_global()
?worldclim_global()
View(D_dat)
D_dat
st_coordinates
st_coordinates(geoms[[i]]$netID$geom))[1]
coords
D_dat
M_dat
st_coordinates(geoms[[1]]$netID$geom)
st_coordinates(geoms[[i]]$netID$geom))
M_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila")
View(M_dat)
View(geoms)
geoms[[1]]
geoms[[1]]$netID
geoms[[1]]$netID$network_id
for(i in 1:324){
if(geoms[[i]]$netID$network_id==5016){
print(i)
}
}
for(i in 1:324){
if(geoms[[i]]$netID$network_id==5016){
print(i)
}
}
geoms[[228]]
geoms[[228]]$geom
geoms[[228]]$geom
st_coordinates(geoms[[228]]$geom)
st_coordinates(geoms[[228]]$geom)
geoms[[228]]$geom
geoms[[228]]$geom
geoms[[228]]$geom
geoms[[228]]$geom
st_coordinates(geoms[[228]]$geom)
geoms[[228]]$geom
geoms[[228]]$geom
geoms[[228]]
wrd <- ggplot(data = world) +
geom_sf()+theme_classic() +geom_sf(geom[[228]])
geom[[228]]
geom_sf()+theme_classic() +geom_sf(geoms[[228]]$geom)
ggplot(data = world) +
geom_sf()+theme_classic() +geom_sf(geoms[[228]]$geom)
ggplot(data = world) +
geom_sf()+theme_classic() +geom_sf(data=geoms[[228]]$geom)
Int_dat
library(geodata)
bioclim_spain <- geodata::worldclim_tile(var = "bio", lon=c(0,5), lat=c(40,55)
res = 2.5,
library(geodata)
bioclim_spain <- geodata::worldclim_tile(var = "bio", lon=c(0,5), lat=c(40,55),
res = 2.5,
path = "data/")
bioclim_spain <- geodata::worldclim_county(country="Spain", var = "bio"),res = 2.5, path = "data/")
bioclim_spain <- geodata::worldclim_county(country="Spain", var = "bio",res = 2.5, path = "data/")
bioclim_spain <- geodata::worldclim_country(country="Spain", var = "bio",res = 2.5, path = "data/")
bioclim_spain <- geodata::worldclim_country(country="Spain", var = "bio",res = 0.5, path = "data/")
bioclim_spain <- geodata::worldclim_country(country="Spain", var = "bio",res = 0.5, path = "data/")
bioclim_spain
?ENMTML()
D_dat
Carrot <- ENMTML(pred_dir="data/wc2.1_country/ESP_wc2.1_30s_bio.tif",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="species",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = "PCA",
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='ENV_CONST'), #A Somewhat random choice-evaluate later
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
Carrot <- ENMTML(pred_dir="data/wc2.1_country/ESP_wc2.1_30s_bio.tif",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="species",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='ENV_CONST'), #A Somewhat random choice-evaluate later
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
library(raster)
str_name<-'data/wc2.1_country/ESP_wc2.1_30s_bio.ti'
imported_raster=raster(str_name)
str_name<-'data/wc2.1_country/ESP_wc2.1_30s_bio.tif'
imported_raster=raster(str_name)
View(imported_raster)
plot(imported_raster)
View(imported_raster)
imported_raster@srs
Carrot <- ENMTML(pred_dir="data/wc2.1_country/ESP_wc2.1_30s_bio.tif",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="species",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='ENV_CONST'), #A Somewhat random choice-evaluate later
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
env <- unique(tools::file_ext(list.files(data/wc2.1_country/ESP_wc2.1_30s_bio.tif)))
?tools::file_ext()
list.files("data/wc2.1_country/ESP_wc2.1_30s_bio.tif")
list.files("data/wc2.1_country/ESP_wc2.1_30s_bio.tif")
env <- unique(tools::file_ext(list.files("data/wc2.1_country/ESP_wc2.1_30s_bio.tif")))
env
list.files("data/wc2.1_country/ESP_wc2.1_30s_bio.tif")
list.files("data/wc2.1_country/")
list.files("data/wc2.1_country/ESP_wc2.1_30s_bio.tif")
?list.files()
setwd("~/Documents/InterMod/Analysis")
list.files("data/wc2.1_country/ESP_wc2.1_30s_bio.tif")
list.files("data/wc2.1_country/")
Carrot <- ENMTML(pred_dir="data/wc2.1_country/",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="species",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='ENV_CONST'), #A Somewhat random choice-evaluate later
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
env <- unique(tools::file_ext(list.files(pred_dir)))
M_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
colnames(M_dat) <- c("sp", "x", "y")
D_dat <- mGDat %>% dplyr::filter(taxonomy.name.to=="Daucus carota carota") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
colnames(D_dat) <- c("sp", "x", "y")
Int_dat <- mGDat %>% dplyr::filter(taxonomy.name.to=="Daucus carota carota") %>%
dplyr::filter(., taxonomy.name.from=="Mordellistena pumila") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
colnames(Int_dat) <- c("sp", "x", "y")
Int_dat$species <- "Interaction"
write.table(D_dat, file="data/occ_Dat/Dcarota.txt")
write.table(M_dat, file="data/occ_Dat/Mpumila.txt")
write.table(Int_dat, file="data/occ_Dat/Int_Dcarota.Mpumila.txt")
Carrot <- ENMTML(pred_dir="data/wc2.1_country/",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="sp",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='ENV_CONST'), #A Somewhat random choice-evaluate later
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
occ <- utils::read.table("data/occ_Dat/Dcarota.txt",
h = TRUE,
sep = '\t',
stringsAsFactors = FALSE)
View(occ)
occ <- utils::read.table("data/occ_Dat/Dcarota.txt",
h = TRUE,
sep = ',',
stringsAsFactors = FALSE)
occ
write.table(D_dat, file="data/occ_Dat/Dcarota.txt", sep="\t")
write.table(D_dat, file="data/occ_Dat/Dcarota.txt", sep="\t")
write.table(M_dat, file="data/occ_Dat/Mpumila.txt", sep="\t")
write.table(Int_dat, file="data/occ_Dat/Int_Dcarota.Mpumila.txt", sep="\t")
occ <- utils::read.table("data/occ_Dat/Dcarota.txt",
h = TRUE,
, sep="\t",
stringsAsFactors = FALSE)
View(occ)
occ<-occ[,c(sp,x,y)]
occ<-occ[,c("sp","x","y")]
?ENMTML()
Carrot <- ENMTML(pred_dir="data/wc2.1_country/",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="sp",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='ENV_CONST'), #A Somewhat random choice-evaluate later
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
M_dat <- mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
colnames(M_dat) <- c("sp", "x", "y")
D_dat <- mGDat %>% dplyr::filter(taxonomy.name.to=="Daucus carota carota") %>% dplyr::select(., taxonomy.name.to, x, y) %>% unique()
colnames(D_dat) <- c("sp", "x", "y")
Int_dat <- mGDat %>% dplyr::filter(taxonomy.name.to=="Daucus carota carota") %>%
dplyr::filter(., taxonomy.name.from=="Mordellistena pumila") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
colnames(Int_dat) <- c("sp", "x", "y")
Int_dat$species <- "Interaction"
write.table(D_dat, file="data/occ_Dat/Dcarota.txt", sep="\t")
write.table(M_dat, file="data/occ_Dat/Mpumila.txt", sep="\t")
write.table(Int_dat, file="data/occ_Dat/Int_Dcarota.Mpumila.txt", sep="\t")
D_dat
Carrot <- ENMTML(pred_dir="data/wc2.1_country/",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="sp",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='ENV_CONST'), #A Somewhat random choice-evaluate later
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
read.table(file="/data/Result/CrossValidation_Moran_MESS.txt")
read.table(file="data/Result/CrossValidation_Moran_MESS.txt")
read.table(file="data/Result/Evaluation_Table.txt")
Evaltab <- read.table(file="data/Result/Evaluation_Table.txt")
read.table(file="data/Result/InfoModeling.txt")
read.table(file="data/Result/Occurrences_Evaluation.txt")
?raster
raster("data/Result/EnvConstrain/Daucus_carota_carota.tif")
Carrot_raster <- raster("data/Result/EnvConstrain/Daucus_carota_carota.tif")
plot(Carrot_raster)
Carrot <- ENMTML(pred_dir="data/wc2.1_country/",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Dcarota.txt",
sp="sp",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='GEO_CONST', width='100'), #100 km buffer is what cleber does
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='5'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
Carrot_raster <- raster("data/Result/EnvConstrain/Daucus_carota_carota.tif")
plot(Carrot_raster)
Evaltab <- read.table(file="data/Result/Evaluation_Table.txt")
Evaltab
read.table(file="data/Result/Occurrences_Evaluation.txt")
Evaltab <- read.table(file="data/Result/Evaluation_Table.txt")
read.table(file="data/Result/Occurrences_Evaluation.txt")
library(raster)
str_name<-'data/wc2.1_country/ESP_wc2.1_30s_bio.tif'
imported_raster=raster(str_name)
plot(imported_raster)
plot(imported_raster)
points(x=D_dat$x, y=D_dat$y)
plot(imported_raster)
points(x=D_dat$x, y=D_dat$y)
imported_raster
points(x=D_dat$x, y=D_dat$y)
plot(imported_raster)
points(x=D_dat$x, y=D_dat$y)
D_dat
Int_dat
M_dat
D_dat
mGDat
mGDat %>% dplyr::filter(taxonomy.name.to=="Daucus carota carota") %>% dplyr::select(., taxonomy.name.to, x, y) %>% unique()
mGDat %>% dplyr::filter(taxonomy.name.from=="Mordellistena pumila") %>% dplyr::select(., taxonomy.name.from, x, y) %>% unique()
mGDat %>% dplyr::select(., taxonomy.name.from, x,y) %>% unique() %>% select(taxonomy.name.from) %>% table() %>% sort(., decreasing=TRUE) %>% head()
Mpulima <- ENMTML(pred_dir="data/wc2.1_country/",
proj_dir = NULL,
result_dir = NULL,
occ_file = "data/occ_Dat/Mpumila.txt",
sp="sp",
x="x",
y="y",
min_occ=5,
thin_occ=NULL,
eval_occ=NULL,
colin_var = c(method='PCA'),
imp_var = TRUE,
sp_accessible_area = NULL,
pseudoabs_method=c(method='GEO_CONST', width='100'), #100 km buffer is what cleber does
pres_abs_ratio = 0.5,
part=c(method= 'KFOLD', folds='2'), #Kfolds valifation, where K=5
save_part = FALSE,
save_final = TRUE,
algorithm="MXD", #Using Maxent with Default Params
thr="MAX_TSS",#Threshold by maximizing TSS
msdm = NULL,
ensemble = NULL,
extrapolation = FALSE,
cores = 4)
plot(imported_raster)
plot(imported_raster)
points(x=D_dat$x, y=D_dat)
